abs(log2FoldChange_atac) > thr_atac, gene_symbol, ""))
# mutate(labels = ifelse((log2FoldChange_rna > 2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna > 2 & log2FoldChange_atac < 0) |
#                          (log2FoldChange_rna < -2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna < -3 & log2FoldChange_atac < -1) |
#                          gene_symbol %in% c("Hlx", "Lef1"),
#                        gene_symbol, ""))
point_plot |>
na.omit() |>
ggplot(aes(log2FoldChange_atac, log2FoldChange_rna, label = labels)) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = c(thr_atac, -thr_atac), color = "grey", linewidth = 1) +
geom_vline(xintercept = 0) +
geom_vline(xintercept = c(thr_rna, -thr_rna), color = "grey", linewidth = 1) +
geom_pointdensity() +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_text_repel(segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
# nudge_x = 0.5,
max.overlaps = Inf,
min.segment.length = 0) +
labs(title = "ATAC/RNA LFC comparison",
y = "RNASeq log2FoldChange",
x = "ATACSeq log2FoldChange",
subtitle = paste0(nrow(point_plot), " genes compared")) +
scale_color_viridis_c(option = "C") +
scale_x_continuous(expand = expansion(mult = 0.3)) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_bw()
thr_atac <- 0.7
thr_rna <- 0.5
point_plot <- merged |>
mutate(labels = ifelse(gene_symbol %in% unique(tfl$Name.TF) &
abs(log2FoldChange_rna) > thr_rna &
abs(log2FoldChange_atac) > thr_atac, gene_symbol, ""))
# mutate(labels = ifelse((log2FoldChange_rna > 2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna > 2 & log2FoldChange_atac < 0) |
#                          (log2FoldChange_rna < -2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna < -3 & log2FoldChange_atac < -1) |
#                          gene_symbol %in% c("Hlx", "Lef1"),
#                        gene_symbol, ""))
point_plot |>
na.omit() |>
ggplot(aes(log2FoldChange_atac, log2FoldChange_rna, label = labels)) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = c(thr_atac, -thr_atac), color = "grey", linewidth = 1) +
geom_vline(xintercept = 0) +
geom_vline(xintercept = c(thr_rna, -thr_rna), color = "grey", linewidth = 1) +
geom_pointdensity() +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_text_repel(segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
# nudge_x = 0.5,
max.overlaps = Inf,
min.segment.length = 0) +
labs(title = "ATAC/RNA LFC comparison",
y = "RNASeq log2FoldChange",
x = "ATACSeq log2FoldChange",
subtitle = paste0(nrow(point_plot), " genes compared")) +
scale_color_viridis_c(option = "C") +
scale_x_continuous(expand = expansion(mult = 0.3)) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_bw()
ggsave("plots/007/001_logFC_ATAC_vs_RNA_thr.png", h = 1500, w = 2500, units = "px")
library(tidyverse)
library(Rsubread)
BiocManager::install("soGGi", "ChIPQC")
BiocManager::install(c("soGGi", "ChIPQC"))
bl_bed <- rtracklayer::import.bed("data/blacklist_mm39.bed")
peaks <- list.files("data/new_bam", pattern = ".narrowPeak", full.names = T)
myPeaks <- lapply(peaks, ChIPQC:::GetGRanges, simple = TRUE)
names(myPeaks) <- basename(peaks) |> stringr::str_extract("[:alnum:]{2,3}_[:alnum:]{2,3}")
myGRangesList<-GenomicRanges::GRangesList(myPeaks)
seqlevelsStyle(myGRangesList) <- "NCBI"
seqlevelsStyle(myGRangesList) <- "NCBI"
library(soGGi)
library(ChIPQC)
bl_bed <- rtracklayer::import.bed("data/blacklist_mm39.bed")
peaks <- list.files("data/new_bam", pattern = ".narrowPeak", full.names = T)
myPeaks <- lapply(peaks, ChIPQC:::GetGRanges, simple = TRUE)
names(myPeaks) <- basename(peaks) |> stringr::str_extract("[:alnum:]{2,3}_[:alnum:]{2,3}")
myGRangesList<-GenomicRanges::GRangesList(myPeaks)
seqlevelsStyle(myGRangesList) <- "NCBI"
seqlevelsStyle(bl_bed) <- "NCBI"
reduced <- reduce(unlist(myGRangesList))
Group <- factor(c("wt", "kd", rep("wt", 3), rep("kd", 3)))
consensusIDs <- paste0("consensus_", seq(1, length(reduced)))
mcols(reduced) <- do.call(cbind, lapply(myGRangesList, function(x) (reduced %over% x) + 0))
reducedConsensus <- reduced
mcols(reducedConsensus) <- cbind(as.data.frame(mcols(reducedConsensus)), consensusIDs)
consensusIDs <- paste0("consensus_", seq(1, length(reducedConsensus)))
consensusToCount <- reducedConsensus
consensusToCount <- consensusToCount[!consensusToCount %over% bl_bed & seqnames(consensusToCount) %in% c(as.character(1:19), "X", "Y")]
# Overlap of Nucleosome free regions among replicates
library(dplyr)
library(ggplot2)
library(limma)
as.data.frame(elementMetadata(consensusToCount)) %>%
dplyr::select(-consensusIDs) %>%
as.matrix %>%
t %>% prcomp %>% .$x %>% data.frame %>%
mutate(Samples = rownames(.)) %>%
mutate(Group = gsub("_\\d", "", Samples)) %>%
ggplot(aes(x = PC1, y = PC2, colour = Group)) +
geom_point(size = 5) +
labs(title = "PCA Open Regions")
library(fgsea)
library(msigdbr)
library(ggrepel)
library(ggpointdensity)
library(ggpubr)
library(tidyverse)
atac_de <- read_csv("data/005.1c_ATAC_de.csv")
dge <- readRDS("data/002_res_tbl.rds")
tfl <- read_tsv("data/TFLink_Mus_musculus_interactions_All_simpleFormat_v1.0.tsv.gz") # TFLink data
merged <- atac_de |>
select(-1) |>
inner_join(dge,
by = c("gene_symbol" = "symbol"), suffix = c("_atac", "_rna"))
thr_atac <- 0.7
thr_rna <- 0.5
# Barplot log2FC best genes ATAC
merged |>
filter(padj_atac < 0.05) |>
arrange(-log2FoldChange_atac) |>
slice(-(11:(n()-10))) |>
select(gene_symbol, matches("log2|padj")) |>
pivot_longer(!gene_symbol,
names_to = c(".value", "contrast"),
names_sep = "_",
values_to = ".value",
names_transform = list(contrast = toupper)) |>
mutate(color = ifelse(padj < 0.05, "black", NA)) |>
ggplot(aes(reorder(gene_symbol, log2FoldChange),
log2FoldChange,
fill = contrast,
color = color)) +
geom_bar(stat = "identity", position = position_dodge(0.9), linewidth = 1) +
theme_bw() +
labs(title = "Largest FC in differential accessibility vs corresponding differential gene expression",
x = "Gene symbol",
color = "padj") +
scale_color_identity(guide = "legend", labels = c("signif", "ns")) +
guides(color = guide_legend(override.aes = list(fill = "grey"))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Density plot
dens_plot <- point_plot |>
select(gene_symbol, starts_with("Log")) |>
pivot_longer(-gene_symbol, names_to = "experiment", names_prefix = "log2FoldChange_", values_to = "log2FC") |>
mutate(experiment = str_to_upper(experiment))
mw_res <- wilcox.test(dens_plot |> filter(experiment == "ATAC") |> pull(log2FC),
dens_plot |> filter(experiment == "RNA") |> pull(log2FC),
alternative = "two.sided")
point_plot <- merged |>
mutate(labels = ifelse(gene_symbol %in% unique(tfl$Name.TF) &
abs(log2FoldChange_rna) > thr_rna &
abs(log2FoldChange_atac) > thr_atac, gene_symbol, ""))
# Barplot log2FC best genes ATAC
merged |>
filter(padj_rna < 0.05) |>
arrange(-log2FoldChange_rna) |>
slice(-(11:(n()-10))) |>
select(gene_symbol, matches("log2|padj")) |>
pivot_longer(!gene_symbol,
names_to = c(".value", "contrast"),
names_sep = "_",
values_to = ".value",
names_transform = list(contrast = toupper)) |>
mutate(color = ifelse(padj < 0.05, "black", NA)) |>
ggplot(aes(reorder(gene_symbol, log2FoldChange),
log2FoldChange,
fill = contrast,
color = color)) +
geom_bar(stat = "identity", position = position_dodge(0.9), linewidth = 1) +
theme_bw() +
labs(title = "Largest FC in differential expression vs corresponding differential accessibility",
x = "Gene symbol",
color = "padj") +
scale_color_identity(guide = "legend", labels = c("signif", "ns")) +
guides(color = guide_legend(override.aes = list(fill = "grey"))) +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
# Density plot
dens_plot <- point_plot |>
select(gene_symbol, starts_with("Log")) |>
pivot_longer(-gene_symbol, names_to = "experiment", names_prefix = "log2FoldChange_", values_to = "log2FC") |>
mutate(experiment = str_to_upper(experiment))
mw_res <- wilcox.test(dens_plot |> filter(experiment == "ATAC") |> pull(log2FC),
dens_plot |> filter(experiment == "RNA") |> pull(log2FC),
alternative = "two.sided")
dens_plot |>
ggplot(aes(log2FC, color = experiment, fill = experiment)) +
geom_density(lwd = 1, alpha = 0.3) +
theme_bw() +
labs(title = "Density distributions of log2FoldChanges",
subtitle = paste0("MWU test p-value: ", mw_res$p.value |> round(4))) +
scale_color_discrete(name = "Experiment", aesthetics = c("color", "fill"))
dens_plot |>
filter(log2FC < 0) |>
ggplot(aes(log2FC, color = experiment, fill = experiment)) +
geom_density(lwd = 1, alpha = 0.3) +
theme_bw() +
labs(title = "Density distributions of negative log2FoldChanges",
subtitle = paste0("MWU test p-value: ", mw_res_neg$p.value |> round(4))) +
scale_color_discrete(name = "Experiment", aesthetics = c("color", "fill"))
mw_res_neg <- wilcox.test(dens_plot |> filter(experiment == "ATAC", log2FC < 0) |> pull(log2FC),
dens_plot |> filter(experiment == "RNA", log2FC < 0) |> pull(log2FC),
alternative = "two.sided")
mw_res_pos <- wilcox.test(dens_plot |> filter(experiment == "ATAC", log2FC > 0) |> pull(log2FC),
dens_plot |> filter(experiment == "RNA", log2FC > 0) |> pull(log2FC),
alternative = "two.sided")
dens_plot |>
filter(log2FC > 0) |>
ggplot(aes(log2FC, color = experiment, fill = experiment)) +
geom_density(lwd = 1, alpha = 0.3) +
theme_bw() +
labs(title = "Density distributions of positive log2FoldChanges",
subtitle = paste0("MWU test p-value: ", mw_res_pos$p.value |> round(4))) +
scale_color_discrete(name = "Experiment", aesthetics = c("color", "fill"))
dens_plot |>
filter(log2FC < 0) |>
ggplot(aes(log2FC, color = experiment, fill = experiment)) +
geom_density(lwd = 1, alpha = 0.3) +
theme_bw() +
labs(title = "Density distributions of negative log2FoldChanges",
subtitle = paste0("MWU test p-value: ", mw_res_neg$p.value |> round(4))) +
scale_color_discrete(name = "Experiment", aesthetics = c("color", "fill"))
# Enrichment in ATAC for TFTs
tft_db <- msigdbr(species = "Mus musculus", category = "C3") |>
filter(gs_subcat %in% c("TFT:GTRD", "TFT:TFT_Legacy"))
mlist <- split(x = tft_db$gene_symbol, f = tft_db$gs_name)
df <- atac_de |>
as.data.frame() |>
filter(!is.na(padj) & !is.na(log2FoldChange) & !is.na(gene_symbol)) |>
mutate(padj = replace(padj, padj == 0, 2.225074e-308))
# find targets of interesting TFs
test_targets <- function(TF, save_name = NULL){
targets <- tfl |>
filter(Name.TF == TF) |>
pull(Name.Target)
targets_lfc <- merged |> filter(gene_symbol %in% targets) |> pull(log2FoldChange_rna)
not_targets_lfc <- merged |> filter(!(gene_symbol %in% targets)) |> pull(log2FoldChange_rna)
ks <- ks.test(targets_lfc, not_targets_lfc)
tt <- t.test(targets_lfc, not_targets_lfc)
p <- merged |>
mutate(Target = ifelse(gene_symbol %in% targets, "Yes", "No")) |>
na.omit() |>
ggdensity(x = "log2FoldChange_rna",
color = "Target",
fill = "Target",
size = 1.5,
add = "mean") +
coord_cartesian(xlim = quantile(merged$log2FoldChange_rna, probs = seq(0, 1, 0.01), na.rm = T)[c(3,99)]) +
labs(title = paste("KS test and t-test for", TF, "targets"),
x = "log2FC RNA",
subtitle = paste("KS p-value:", scales::scientific(ks$p.value), "        ",
"t-test p-value:", scales::scientific(tt$p.value))) +
scale_fill_discrete(breaks = c("Yes", "No"),
labels = c(paste0("Yes (", length(targets_lfc), ")"),
paste0("No (", length(not_targets_lfc), ")")),
aesthetics = c("color", "fill"),)
print(p)
if(!is.null(save_name)){
ggsave(paste0("plots/007/", save_name), plot = p, h = 1200, w = 2000, units = "px")
}
}
test_targets("Srebf1")
# find targets of interesting TFs
test_targets <- function(TF, save_name = NULL){
targets <- tfl |>
filter(Name.TF == TF) |>
pull(Name.Target)
targets_lfc <- merged |> filter(gene_symbol %in% targets) |> pull(log2FoldChange_rna)
not_targets_lfc <- merged |> filter(!(gene_symbol %in% targets)) |> pull(log2FoldChange_rna)
ks <- ks.test(targets_lfc, not_targets_lfc)
tt <- t.test(targets_lfc, not_targets_lfc)
p <- merged |>
mutate(Target = ifelse(gene_symbol %in% targets, "Yes", "No")) |>
na.omit() |>
ggdensity(x = "log2FoldChange_rna",
color = "Target",
fill = "Target",
size = 1.5, alpha = 0.3,
add = "mean") +
coord_cartesian(xlim = quantile(merged$log2FoldChange_rna, probs = seq(0, 1, 0.01), na.rm = T)[c(3,99)]) +
labs(title = paste("KS test and t-test for", TF, "targets"),
x = "log2FC RNA",
subtitle = paste("KS p-value:", scales::scientific(ks$p.value), "        ",
"t-test p-value:", scales::scientific(tt$p.value))) +
scale_fill_discrete(breaks = c("Yes", "No"),
labels = c(paste0("Yes (", length(targets_lfc), ")"),
paste0("No (", length(not_targets_lfc), ")")),
aesthetics = c("color", "fill"),)
print(p)
if(!is.null(save_name)){
ggsave(paste0("plots/007/", save_name), plot = p, h = 1200, w = 2000, units = "px")
}
}
test_targets("Srebf1")
p <- merged |>
mutate(Target = ifelse(gene_symbol %in% targets, "Yes", "No")) |>
na.omit() |>
ggdensity(x = "log2FoldChange_rna",
color = "Target",
fill = "Target",
size = 1.5, alpha = 0.1,
add = "mean") +
coord_cartesian(xlim = quantile(merged$log2FoldChange_rna, probs = seq(0, 1, 0.01), na.rm = T)[c(3,99)]) +
labs(title = paste("KS test and t-test for", TF, "targets"),
x = "log2FC RNA",
subtitle = paste("KS p-value:", scales::scientific(ks$p.value), "        ",
"t-test p-value:", scales::scientific(tt$p.value))) +
scale_fill_discrete(breaks = c("Yes", "No"),
labels = c(paste0("Yes (", length(targets_lfc), ")"),
paste0("No (", length(not_targets_lfc), ")")),
aesthetics = c("color", "fill"),)
# find targets of interesting TFs
test_targets <- function(TF, save_name = NULL){
targets <- tfl |>
filter(Name.TF == TF) |>
pull(Name.Target)
targets_lfc <- merged |> filter(gene_symbol %in% targets) |> pull(log2FoldChange_rna)
not_targets_lfc <- merged |> filter(!(gene_symbol %in% targets)) |> pull(log2FoldChange_rna)
ks <- ks.test(targets_lfc, not_targets_lfc)
tt <- t.test(targets_lfc, not_targets_lfc)
p <- merged |>
mutate(Target = ifelse(gene_symbol %in% targets, "Yes", "No")) |>
na.omit() |>
ggdensity(x = "log2FoldChange_rna",
color = "Target",
fill = "Target",
size = 1.5, alpha = 0.1,
add = "mean") +
coord_cartesian(xlim = quantile(merged$log2FoldChange_rna, probs = seq(0, 1, 0.01), na.rm = T)[c(3,99)]) +
labs(title = paste("KS test and t-test for", TF, "targets"),
x = "log2FC RNA",
subtitle = paste("KS p-value:", scales::scientific(ks$p.value), "        ",
"t-test p-value:", scales::scientific(tt$p.value))) +
scale_fill_discrete(breaks = c("Yes", "No"),
labels = c(paste0("Yes (", length(targets_lfc), ")"),
paste0("No (", length(not_targets_lfc), ")")),
aesthetics = c("color", "fill"),)
print(p)
if(!is.null(save_name)){
ggsave(paste0("plots/007/", save_name), plot = p, h = 1200, w = 2000, units = "px")
}
}
test_targets("Srebf1")
# find targets of interesting TFs
test_targets <- function(TF, save_name = NULL){
targets <- tfl |>
filter(Name.TF == TF) |>
pull(Name.Target)
targets_lfc <- merged |> filter(gene_symbol %in% targets) |> pull(log2FoldChange_rna)
not_targets_lfc <- merged |> filter(!(gene_symbol %in% targets)) |> pull(log2FoldChange_rna)
ks <- ks.test(targets_lfc, not_targets_lfc)
tt <- t.test(targets_lfc, not_targets_lfc)
p <- merged |>
mutate(Target = ifelse(gene_symbol %in% targets, "Yes", "No")) |>
na.omit() |>
ggdensity(x = "log2FoldChange_rna",
color = "Target",
fill = "Target",
size = 1.5, alpha = 0.25,
add = "mean") +
coord_cartesian(xlim = quantile(merged$log2FoldChange_rna, probs = seq(0, 1, 0.01), na.rm = T)[c(3,99)]) +
labs(title = paste("KS test and t-test for", TF, "targets"),
x = "log2FC RNA",
subtitle = paste("KS p-value:", scales::scientific(ks$p.value), "        ",
"t-test p-value:", scales::scientific(tt$p.value))) +
scale_fill_discrete(breaks = c("Yes", "No"),
labels = c(paste0("Yes (", length(targets_lfc), ")"),
paste0("No (", length(not_targets_lfc), ")")),
aesthetics = c("color", "fill"),)
print(p)
if(!is.null(save_name)){
ggsave(paste0("plots/007/", save_name), plot = p, h = 1200, w = 2000, units = "px")
}
}
test_targets("Srebf1")
test_targets("Srebf1", "Srebf1_ks_test.png")
# test_targets("Hlx") # ns
test_targets("Lef1", "Lef1_ks_test.png")
cor <- cor.test(merged$log2FoldChange_atac, merged$log2FoldChange_rna, method = "spearman")
cor
cor.test(merged$log2FoldChange_atac, merged$log2FoldChange_rna, method = "pearson")
s_cor <- cor.test(merged$log2FoldChange_atac, merged$log2FoldChange_rna, method = "spearman")
p_cor <- cor.test(merged$log2FoldChange_atac, merged$log2FoldChange_rna, method = "pearson")
s_cor <- cor.test(merged$log2FoldChange_atac, merged$log2FoldChange_rna, method = "spearman")
p_cor$estimate
point_plot <- merged |>
mutate(labels = ifelse(gene_symbol %in% unique(tfl$Name.TF) &
abs(log2FoldChange_rna) > thr_rna &
abs(log2FoldChange_atac) > thr_atac, gene_symbol, ""))
# mutate(labels = ifelse((log2FoldChange_rna > 2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna > 2 & log2FoldChange_atac < 0) |
#                          (log2FoldChange_rna < -2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna < -3 & log2FoldChange_atac < -1) |
#                          gene_symbol %in% c("Hlx", "Lef1"),
#                        gene_symbol, ""))
point_plot |>
na.omit() |>
ggplot(aes(log2FoldChange_atac, log2FoldChange_rna, label = labels)) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = c(thr_atac, -thr_atac), color = "grey", linewidth = 1) +
geom_vline(xintercept = 0) +
geom_vline(xintercept = c(thr_rna, -thr_rna), color = "grey", linewidth = 1) +
geom_pointdensity() +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_text_repel(segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
# nudge_x = 0.5,
max.overlaps = Inf,
min.segment.length = 0) +
labs(title = "ATAC/RNA LFC comparison",
y = "RNASeq log2FoldChange",
x = "ATACSeq log2FoldChange",
subtitle = paste0(nrow(point_plot), " genes compared      "),
"Pearson r: ", p_cor$estimate, "      ",
"Spearman r: ", s_cor$estimate) +
scale_color_viridis_c(option = "C") +
scale_x_continuous(expand = expansion(mult = 0.3)) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_bw()
# mutate(labels = ifelse((log2FoldChange_rna > 2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna > 2 & log2FoldChange_atac < 0) |
#                          (log2FoldChange_rna < -2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna < -3 & log2FoldChange_atac < -1) |
#                          gene_symbol %in% c("Hlx", "Lef1"),
#                        gene_symbol, ""))
point_plot |>
na.omit() |>
ggplot(aes(log2FoldChange_atac, log2FoldChange_rna, label = labels)) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = c(thr_atac, -thr_atac), color = "grey", linewidth = 1) +
geom_vline(xintercept = 0) +
geom_vline(xintercept = c(thr_rna, -thr_rna), color = "grey", linewidth = 1) +
geom_pointdensity() +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_text_repel(segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
# nudge_x = 0.5,
max.overlaps = Inf,
min.segment.length = 0) +
labs(title = "ATAC/RNA LFC comparison",
y = "RNASeq log2FoldChange",
x = "ATACSeq log2FoldChange",
subtitle = paste0(nrow(point_plot), " genes compared      ",
"Pearson r: ", p_cor$estimate, "      ",
"Spearman r: ", s_cor$estimate)) +
scale_color_viridis_c(option = "C") +
scale_x_continuous(expand = expansion(mult = 0.3)) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_bw()
# mutate(labels = ifelse((log2FoldChange_rna > 2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna > 2 & log2FoldChange_atac < 0) |
#                          (log2FoldChange_rna < -2 & log2FoldChange_atac > 0) |
#                          (log2FoldChange_rna < -3 & log2FoldChange_atac < -1) |
#                          gene_symbol %in% c("Hlx", "Lef1"),
#                        gene_symbol, ""))
point_plot |>
na.omit() |>
ggplot(aes(log2FoldChange_atac, log2FoldChange_rna, label = labels)) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = c(thr_atac, -thr_atac), color = "grey", linewidth = 1) +
geom_vline(xintercept = 0) +
geom_vline(xintercept = c(thr_rna, -thr_rna), color = "grey", linewidth = 1) +
geom_pointdensity() +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_text_repel(segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
# nudge_x = 0.5,
max.overlaps = Inf,
min.segment.length = 0) +
labs(title = "ATAC/RNA LFC comparison",
y = "RNASeq log2FoldChange",
x = "ATACSeq log2FoldChange",
subtitle = paste0(nrow(point_plot), " genes compared      ",
"Pearson r: ", round(p_cor$estimate, 3), "      ",
"Spearman r: ", round(s_cor$estimate, 3))) +
scale_color_viridis_c(option = "C") +
scale_x_continuous(expand = expansion(mult = 0.3)) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_bw()
ggsave("plots/007/001_logFC_ATAC_vs_RNA_thr.png", h = 1500, w = 2500, units = "px")
tfl
tfl |> filter(Name.TF == "Srebf1")
tfl |> filter(Name.TF == "Srebf1") |> pull(Name.Target) |> unique()
tfl |> filter(Name.TF == "Srebf1") |> pull(Name.Target) |> unique() |> length()
mergedf
merged
merged |> count(padj_atac < 0.05)
merged |> count(padj_rna < 0.05)
merged |> count(padj_rna < 0.05 | padj_rna < 0.05)
merged |> count(padj_rna < 0.05 | padj_atac < 0.05)
merged |> select(starts_with("padj"), gene_symbol)
merged |> select(starts_with("padj"), gene_symbol) |> print(n = Inf)
atac_de
dge
merged |> filter(starts_with("log2"))
merged |> filter(gene_symbol %in% c("Srebf1", "Lef2")) |> select(starts_with("log2"))
merged |> filter(gene_symbol %in% c("Srebf1", "Lef2")) |> select(gene_symbol, starts_with("log2"))
merged |> filter(gene_symbol %in% c("Srebf1", "Lef1")) |> select(gene_symbol, starts_with("log2"))
